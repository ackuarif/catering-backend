generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model admin {
  id          Int       @id @default(autoincrement())
  nama        String
  user_id     String
  password    String
  created_at  DateTime  @default(now()) @db.Timestamptz
  deleted_at  DateTime?
}

model pelanggan {
  id          Int       @id @default(autoincrement())
  nama        String
  user_id     String
  password    String
  telepon     String
  alamat      String
  wilayah_id  Int
  created_at  DateTime  @default(now()) @db.Timestamptz
  deleted_at  DateTime?
  pemesanans  pemesanan[]
  wilayah   wilayah @relation(fields: [wilayah_id], references: [id])
}

model menu {
  id            Int       @id @default(autoincrement())
  admin_id      Int
  nama          String
  harga         Int
  diskon        Int
  gambar        String?
  detail        String
  tersedia      String?
  created_at    DateTime  @default(now()) @db.Timestamptz
  deleted_at    DateTime?
  keranjangs    keranjang[]
  testimonis    testimoni[]
  menu_isis     menu_isi[]
  menu_gambars  menu_gambar[]
}

model pemesanan {
  id            Int       @id @default(autoincrement())
  pelanggan_id  Int
  no_pesan      String
  sistem_bayar  String?
  tgl_pesan     DateTime  @default(now()) @db.Timestamptz
  tgl_antar     DateTime?
  tgl_bayar     DateTime?
  tgl_verif     DateTime?
  tgl_selesai   DateTime?
  ongkir        Int       @default(0)
  ket           String?
  bukti_bayar   String?
  created_at    DateTime  @default(now()) @db.Timestamptz
  pelanggan     pelanggan @relation(fields: [pelanggan_id], references: [id])
  keranjangs    keranjang[]
}

model keranjang {
  id            Int       @id @default(autoincrement())
  pemesanan_id  Int?
  pelanggan_id  Int
  menu_id       Int
  jumlah        Int
  harga         Int
  diskon        Int?
  created_at    DateTime  @default(now()) @db.Timestamptz
  pemesanan     pemesanan? @relation(fields: [pemesanan_id], references: [id])
  menu          menu @relation(fields: [menu_id], references: [id])
}

model chat {
  id            Int       @id @default(autoincrement())
  pemesanan_id  Int
  nama          String
  user_type     String    @default("Pelanggan")
  chat          String
  status        String?
  created_at    DateTime  @default(now()) @db.Timestamptz
}

model logs {
  id            Int       @id @default(autoincrement())
  ip_address    String
  created_at    DateTime  @default(now()) @db.Timestamptz
}

model setting {
  id              Int       @id @default(autoincrement())
  info_pembayaran String
  created_at      DateTime  @default(now()) @db.Timestamptz
}

model komplain {
  id            Int       @id @default(autoincrement())
  user_id       Int?
  nama          String?
  user_type     String    @default("Pelanggan")
  ket           String
  status        String?
  created_at    DateTime  @default(now()) @db.Timestamptz
}

model testimoni {
  id            Int       @id @default(autoincrement())
  pemesanan_id  Int
  menu_id       Int
  rating        Int
  nama          String
  ket           String?
  created_at    DateTime  @default(now()) @db.Timestamptz
  menu          menu @relation(fields: [menu_id], references: [id])
}

model wilayah {
  id          Int       @id @default(autoincrement())
  nama        String
  ongkir      Int?      @default(0)
  created_at  DateTime  @default(now()) @db.Timestamptz
  deleted_at  DateTime?
  pelanggans  pelanggan[]
}

model menu_isi {
  id            Int       @id @default(autoincrement())
  menu_id       Int
  isi           String
  created_at    DateTime  @default(now()) @db.Timestamptz
  menu          menu      @relation(fields: [menu_id], references: [id])
}

model menu_gambar {
  id            Int       @id @default(autoincrement())
  menu_id       Int
  gambar        String
  created_at    DateTime  @default(now()) @db.Timestamptz
  menu          menu      @relation(fields: [menu_id], references: [id])
}